
package lipid;
unit LipidScoreUnit;
import lipid.Annotation;
import lipid.Lipid;
function int lipidTypeOrder(String type) {
    if (type.equals("PG")) return 1;
    if (type.equals("PE")) return 2;
    if (type.equals("PI")) return 3;
    if (type.equals("PA")) return 4;
    if (type.equals("PS")) return 5;
    if (type.equals("PC")) return 6;
    return 0;
}
rule "rule 1.CARBON BONDS-->test INCREASING RT POSITIVE FOR DIFF CARBON BONDS"
    when
    $a1: /annotations [$rt1:rtMin, $doubleBondCount1: lipid.getDoubleBondsCount(),$carbonCount11: lipid.getCarbonCount(),$lipidType1: lipid.getLipidType()]
    $a2: /annotations [this!=$a1, rtMin<$rt1, lipid.getDoubleBondsCount()==$doubleBondCount1, lipid.getCarbonCount() < $carbonCount11,lipid.getLipidType()==$lipidType1]

   then
    $a1.addScore(1);
    $a2.addScore(1);
    System.out.println("Scored 1 for annotations: " + $a1 + " and " + $a2 +" when L1 carbon>L2 carbon");

end

rule "rule 2. DOUBLE BONDS --> test INCREASING RT POSITIVE FOR DIFF DOUBLE BONDS"
when
    $a1: /annotations [$rt1:rtMin,$lipidType1: lipid.getLipidType(), $doubleBondCount1: lipid.getDoubleBondsCount(),$carbonCount11: lipid.getCarbonCount()]
    $a2: /annotations [this!=$a1, rtMin<$rt1, lipid.getLipidType()==$lipidType1, lipid.getDoubleBondsCount()>$doubleBondCount1, lipid.getCarbonCount() == $carbonCount11]

   then
    $a1.addScore(1);
    $a2.addScore(1);
    System.out.println("Scored 1 for annotations: " + $a1 + " and " + $a2 +" when L2 double bond>L1 double bond");

end


rule "rule 3. LIPID TYPE --> test INCREASING RT POSITIVE FOR DIFF LIPID TYPE"

when
    $a1 : /annotations [$rt1 : rtMin, $type1 : lipid.getLipidType(), $carbon1 : lipid.getCarbonCount(), $db1 : lipid.getDoubleBondsCount()]
    $a2 : /annotations [this != $a1, lipid.getCarbonCount() == $carbon1, lipid.getDoubleBondsCount() == $db1,
                        eval(lipidTypeOrder(lipid.getLipidType()) > lipidTypeOrder($type1)), rtMin > $rt1]
then
    $a1.addScore(1);
    $a2.addScore(1);
       System.out.println("SCORED 1 for annotations: " + $a1 + " and " + $a2 +" when L2 lipid type != L1 lipid type");
    end


rule "rule4. CARBON BONDS-->test DECREASING RT NEGATIVE FOR DIFF CARBON BONDS"
    when
    $a3: /annotations [$rt3:rtMin,$lipidType3: lipid.getLipidType(), $doubleBondCount3: lipid.getDoubleBondsCount(),$carbonCount3: lipid.getCarbonCount()]
    $a4: /annotations [this!=$a3, rtMin>$rt3,lipid.getLipidType()==$lipidType3, lipid.getDoubleBondsCount()==$doubleBondCount3, lipid.getCarbonCount() < $carbonCount3]

   then
    $a3.addScore(-1);
    $a4.addScore(-1);
    System.out.println("Scored -1 for annotations: " + $a3 + " and " + $a4 +" when L1 carbon>L2 carbon");

end

rule "rule 5. DOUBLE BONDS --> test DECREASING RT NEGATIVE FOR DIFF DOUBLE BONDS"
when
    $a3: /annotations [$rt3:rtMin,$lipidType3: lipid.getLipidType(), $doubleBondCount3: lipid.getDoubleBondsCount(),$carbonCount3: lipid.getCarbonCount()]
    $a4: /annotations [this!=$a3, rtMin>$rt3, lipid.getLipidType()==$lipidType3, lipid.getDoubleBondsCount()>$doubleBondCount3, lipid.getCarbonCount() == $carbonCount3]

   then
    $a3.addScore(-1);
    $a4.addScore(-1);
    System.out.println("Scored -1 for annotations: " + $a3 + " and " + $a4 +" when L2 double bond>L1 double bond");

end
rule "rule 6. LIPID TYPE --> test DECREASING RT NEGATIVE FOR DIFF LIPID TYPE"
when
    $a3 : /annotations [$rt1 : rtMin, $type1 : lipid.getLipidType(), $carbon1 : lipid.getCarbonCount(), $db1 : lipid.getDoubleBondsCount()]
    $a4 : /annotations [this != $a3, lipid.getCarbonCount() == $carbon1, lipid.getDoubleBondsCount() == $db1,
                        eval(lipidTypeOrder(lipid.getLipidType()) > lipidTypeOrder($type1)), rtMin < $rt1]
then
    $a3.addScore(-1);
    $a4.addScore(-1);

    System.out.println("SCORED -1 for annotations: " + $a3 + " and " + $a4 +" when L2 lipid type != L1 lipid type");
end
/*package lipid;

  unit LipidScoreUnit;

  // TODO Include here rules and queries to fulfill the practice requirements


  // This is one example of rules that only prints the factorial combination of all pairs eliminating the A-A combination.
  // !! TODO This rule does not include the lipid type, you shall add it.
  // !! TODO Rule that states that the same lipid type with the same number of double bonds and a higher number of carbons should have a higher RT
  // !! TODO
  rule "Score +1 for lipid pair with increasing RT and carbon count"
  when
      $a1 : /annotations [
      $type1 : lipid.getLipidType(),
      $db1 : lipid.getDoubleBondsCount(),
      $carbon1 : lipid.getCarbonCount(),
      $rt1 : rtMin
      ]

      $a2 : /annotations [
      this!= $a1,
      lipid.getLipidType() == $type1,
      lipid.getDoubleBondsCount() == $db1,
      lipid.getCarbonCount() > $carbon1,
      rtMin < $rt1
      ]
  then
      // in this case, the only change is the addition of the score, but the fact does not change so we do not break the principle of refractoriness
      $a1.addScore(1);
      $a2.addScore(1);
      // !! TODO ONLY FOR DEBUGGING
      System.out.println("Scored +1 for annotations: " + $a1 + " and " + $a2);
  end

  // !! TODO NEXT RULE: Negative evidence. If the RT follows the opposite order than the previous one, then the addScore should be -1.
  // 2. Positiva: Mismo tipo, mismos carbonos, más dobles enlaces => menor RT
  rule "Score +1: same lipid type, same carbons, more double bonds => lower RT"
  when
      $a1 : /annotations [
      $rt1 : rtMin,
      $type1 : lipid.getLipidType(),
      $carbon1 : lipid.getCarbonCount(),
      $db1 : lipid.getDoubleBondsCount()]

      $a2 : /annotations [
      this != $a1,
      lipid.getLipidType() == $type1,
      lipid.getCarbonCount() == $carbon1,
      lipid.getDoubleBondsCount() > $db1,
      rtMin < $rt1]
  then
      $a1.addScore(1);
      $a2.addScore(1);
      System.out.println("Positive score: double bond increasing and RT decreasing for " + $a1 + " and " + $a2);
  end

  // 3. Positiva: Diferente tipo, mismos carbonos y dobles enlaces => RT según orden PG < PE < PI < PA < PS << PC
  rule "Score +1: lipid class elution order"
  when
      $a1 : /annotations [
      $type1 : lipid.getLipidType(),
      $db1 : lipid.getDoubleBondsCount(),
      $carbon1 : lipid.getCarbonCount(),
      $rt1 : rtMin]

      $a2 : /annotations [
      this != $a1,
      lipid.getLipidType() != $type1,
      lipid.getDoubleBondsCount() == $db1,
      lipid.getCarbonCount() == $carbon1,
      eval(lipidOrder(lipid.getLipidType()) > lipidOrder($type1)),
      rtMin < $rt1]
  then
      $a1.addScore(1);
      $a2.addScore(1);
      System.out.println("Positive score: class elution order for " + $a1 + " and " + $a2);
  end

  // 4. Negativa: mismo tipo, mismos dobles enlaces, más carbonos => menor RT (violación)
  rule "Score -1: same lipid type, same double bonds, more carbons => lower RT"
  when
      $a1 : /annotations [
      $type1 : lipid.getLipidType(),
      $db1 : lipid.getDoubleBondsCount(),
      $carbon1 : lipid.getCarbonCount(),
      $rt1 : rtMin
      ]

      $a2 : /annotations [
      this != $a1,
      lipid.getLipidType() == $type1,
      lipid.getDoubleBondsCount() == $db1,
      lipid.getCarbonCount() > $carbon1,
      rtMin > $rt1
      ]
  then
      $a1.addScore(-1);
      $a2.addScore(-1);
      System.out.println("Negative score: carbon count increasing but RT decreasing for " + $a1 + " and " + $a2);
  end

  // 5. Negativa: mismo tipo, mismos carbonos, más dobles enlaces => mayor RT (violación)
  rule "Score -1: same lipid type, same carbons, more double bonds => higher RT"
  when
      $a1 : /annotations [
      $rt1 : rtMin,
      $type1 : lipid.getLipidType(),
      $carbon1 : lipid.getCarbonCount(),
      $db1 : lipid.getDoubleBondsCount()]

      $a2 : /annotations [
      this != $a1,
      lipid.getLipidType() == $type1,
      lipid.getCarbonCount() == $carbon1,
      lipid.getDoubleBondsCount() > $db1,
      rtMin > $rt1]
  then
      $a1.addScore(-1);
      $a2.addScore(-1);
      System.out.println("Negative score: double bond increasing but RT increasing for " + $a1 + " and " + $a2);
  end

  // 6. Negativa: clase de lípido viola el orden PG < PE < PI < PA < PS << PC
  rule "Score -1: lipid class elution order violated"
  when
      $a1 : /annotations [
      $type1 : lipid.getLipidType(),
      $db1 : lipid.getDoubleBondsCount(),
      $carbon1 : lipid.getCarbonCount(),
      $rt1 : rtMin]

      $a2 : /annotations [
      this != $a1,
      lipid.getLipidType() != $type1,
      lipid.getDoubleBondsCount() == $db1,
      lipid.getCarbonCount() == $carbon1,
      eval(lipidOrder(lipid.getLipidType()) < lipidOrder($type1)),
      rtMin > $rt1]
  then
      $a1.addScore(-1);
      $a2.addScore(-1);
      System.out.println("Negative score: class elution order violated for " + $a1 + " and " + $a2);
  end

  // Función auxiliar para ordenar tipos de lípido según el patrón esperado
  function int lipidOrder(String type) {
      switch(type) {
          case "PG": return 1;
          case "PE": return 2;
          case "PI": return 3;
          case "PA": return 4;
          case "PS": return 5;
          case "PC": return 6;
          default: return 100;
      }
  }*/